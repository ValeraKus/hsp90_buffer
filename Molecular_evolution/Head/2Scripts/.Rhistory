R_sq_adj <- c(R_sq_adj, sum$adj.r.squared)
residual_std_err <- c(residual_std_err, sum$sigma)
res <- data.frame(species, resid(lg))
colnames(res) <- c('Species', gene)
residuals_clients <- merge(residuals_clients, res, by = 'Species', all = T)
}
#table with linear regression parameters
lm_clients <- data.frame(genes, slopes, intercept, p_val_slope, p_val_intercept, number_of_species, R_sq, R_sq_adj, residual_std_err)
lm_clients <- merge(lm_clients, clients[,c(3,13,14)][!duplicated(clients[,c(3,13)]),], by.x = 'genes', by.y = 'gene', all.x = T)
lm_clients <- lm_clients[!is.na(lm_clients$hsp_group),]
library(ggplot2)
ggplot(lm_clients[lm_clients$p_val_slope <= 0.05,], aes(x = intercept, y = slopes, color = role, size = p_val_slope), alpha = 0.6)+
geom_point()+geom_smooth(method = 'lm', se = F)+
theme_bw()
ggplot(lm_clients[,], aes(x = intercept, y = slopes, color = hsp_group, size = p_val_slope))+
geom_point(alpha = 0.5)+geom_smooth(method = 'lm', se = F, alpha = 0.5)+
theme_bw()
ggplot(lm_clients[lm_clients$p_val_slope <= 0.01,], aes(x = log10(p_val_slope), y = slopes, color = hsp_group), alpha = 0.6)+
geom_point()+geom_smooth(method = 'lm', se = F)+
theme_bw()
ggplot(lm_clients[lm_clients$hsp_group %in% c('client_both', 'client_hsp90', 'control_both', 'control_hsp90'),], aes(x = intercept, y = slopes, color = role, size = p_val_slope))+
geom_point(alpha = 0.5)+geom_smooth(method = 'lm', se = F, alpha = 0.5)+
theme_bw()
ggplot(lm_clients[lm_clients$hsp_group %in% c('client_both', 'client_hsp90', 'control_both', 'control_hsp90') & lm_clients$p_val_slope <= 0.05,], aes(x = intercept, y = slopes, color = role, size = p_val_slope))+
geom_point(alpha = 0.5)+geom_smooth(method = 'lm', se = F, alpha = 0.5)+
theme_bw()
ggplot(lm_clients[lm_clients$hsp_group %in% c('client_both', 'client_hsp90', 'control_both', 'control_hsp90') &
(lm_clients$p_val_slope <= 0.1) & (lm_clients$slopes < 2),],
aes(x = intercept, y = slopes, color = role, size = p_val_slope))+
geom_point(alpha = 0.5)+geom_smooth(method = 'lm', se = F, alpha = 0.5)+
theme_bw()
ggplot(lm_clients[lm_clients$hsp_group %in% c('client_both', 'client_hsc70', 'control_both', 'control_hsc70') &
(lm_clients$p_val_slope <= 1) & (lm_clients$slopes < 1),],
aes(x = intercept, y = slopes, color = role, size = p_val_slope))+
geom_point(alpha = 0.5)+geom_smooth(method = 'lm', se = F, alpha = 0.5)+
theme_bw()
wilcox.test(lm_clients[lm_clients$role == 'client',]$slopes, lm_clients[lm_clients$role == 'nonclient',]$slopes)
ggplot(lm_clients[,], aes(x = role, y = slopes, fill = role))+
geom_boxplot()+
theme_bw()+
scale_fill_discrete(name = 'Группа', labels = c('клиенты', 'неклиенты'))+
scale_x_discrete(name = '', labels = c('клиенты', 'неклиенты'))+
ylab('наклон регрессионной прямой')+
theme(axis.text.x = element_text(size = 15), axis.title.y = element_text(size = 15),
legend.title = element_text(size = 16, face = 'bold'), legend.text = element_text(size = 14))
lm_clients$hsp_group <- factor(lm_clients$hsp_group , levels=c("client_hsp90", "control_hsp90", "client_hsc70", "control_hsc70",
'client_both', 'control_both'))
ggplot(lm_clients[lm_clients$hsp_group %in% c('client_both', 'client_hsp90', 'control_both', 'control_hsp90') &
(lm_clients$p_val_slope <= 0.1),],
aes(x = role,y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+ylim(c(-0.4,1))+
scale_x_discrete(name = "", labels = c('клиенты HSP90', 'неклиенты'))+
ylab('наклон регрессионной прямой')+
theme(axis.text.x = element_text(size = 15), axis.title.y = element_text(size = 15),
legend.position = 'None', axis.text.y = element_text(size = 13))
wilcox.test(lm_clients[lm_clients$hsp_group %in% c('client_both', 'client_hsp90'), 'slopes'],
lm_clients[lm_clients$hsp_group %in% c('control_both', 'control_hsp90'), 'slopes'])
library(ape)
library(geiger)
library(caper)
slopes <- c()
p_val_slope <- c()
intercept <- c()
p_val_intercept <- c()
R_sq <- c()
R_sq_adj <- c()
number_of_species <- c()
genes <- unique(clients$gene)
residual_std_err <- c()
residuals_clients <- data.frame(Species = unique(clients$Species))
trees_clients <- list.files('../../Body/2_Derived/clients/tree/')
trees_nonclients <- list.files('../../Body/2_Derived/nonclients/tree/')
genes_pgls <- c()
for (g in genes){
if (sum(grepl(g, trees_clients)) > 0){
tree <- read.tree(paste('../../Body/2_Derived/clients/tree/',trees_clients[grepl(g, trees_clients)], sep = ''))
}
else if (sum(grepl(g, trees_nonclients)) > 0) {
tree <- read.tree(paste('../../Body/2_Derived/nonclients/tree/',trees_nonclients[grepl(g, trees_nonclients)], sep = ''))
}
else {next}
genes_pgls <- c(genes_pgls, g)
gene <- clients[clients$gene == g,]
row.names(gene) = gene$Species
gene <- na.omit(gene[,c(1,6,12)])
tree_w = treedata(tree, gene, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_w, gene, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$dN.dS = as.numeric(as.character(data$dN.dS))
data$GenerationLength_d = as.numeric(as.character(data$GenerationLength_d))
gene_comp = comparative.data(tree_w, data, Species, vcv=TRUE)
model = pgls(dN.dS ~ log10(GenerationLength_d), gene_comp, lambda="ML")
sum_pgls <- summary(model)
slopes <- c(slopes, sum_pgls$coefficients[2])
intercept <- c(intercept, sum_pgls$coefficients[1])
p_val_slope <- c(p_val_slope, sum_pgls$coefficients[8])
p_val_intercept <- c(p_val_intercept, sum_pgls$coefficients[7])
R_sq <- c(R_sq, sum_pgls$r.squared)
R_sq_adj <- c(R_sq_adj, sum_pgls$adj.r.squared[1])
number_of_species <- c(number_of_species, length(data$Species))
residual_std_err <- c(residual_std_err, sum_pgls$sigma)
res <- data.frame(resid(model))
res$Species = rownames(res)
colnames(res) <- c(g, 'Species')
residuals_clients <- merge(residuals_clients, res, by = 'Species', all = T)
}
pgls_result <- data.frame(data.frame(genes_pgls, slopes, intercept, p_val_slope, p_val_intercept, number_of_species, R_sq, R_sq_adj, residual_std_err))
pgls_result <- merge(pgls_result, clients[,c(3,13,14)][!duplicated(clients[,c(3,13)]),], by.x = 'genes_pgls', by.y = 'gene', all.x = T)
pgls_result <- pgls_result[!is.na(pgls_result$hsp_group),]
ggplot(pgls_result, aes(x = intercept, y = slopes, size = p_val_slope, color = hsp_group))+
#geom_point()+
geom_smooth(method = 'lm')
wilcox.test(pgls_result[pgls_result$role == 'client',]$slopes, pgls_result[pgls_result$role == 'nonclient',]$slopes, alternative = 'greater')
pgls_result$hsp_group <- factor(pgls_result$hsp_group , levels=c("client_hsp90", "control_hsp90", "client_hsc70", "control_hsc70",
'client_both', 'control_both'))
ggplot(pgls_result, aes(x = hsp_group,y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+
ylim(c(-0.2, 1))+
scale_x_discrete(name = "", labels = c('HSP90', 'HSP90', 'HSC70', 'HSC70',
'HSP90 и HSC70', 'HSP90 и HSC70'))+
scale_fill_discrete(name = 'Группа', labels = c('клиенты', 'неклиенты'))+
ylab('наклон линейной регрессии')+
xlab('aaa')+
theme(axis.text.x = element_text(size = 12, angle = 15, hjust = 0.5 ), axis.title.y = element_text(size = 15),
legend.title = element_text(size = 16, face = 'bold'), legend.text = element_text(size = 14))
ggplot(pgls_result[pgls_result$hsp_group %in% c('client_hsp90', 'client_both', 'control_hsp90', 'control_both'),],
aes(x = role, y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+
ylim(c(-0.2, 1))
ggplot(pgls_result, aes(x = hsp_group, y = slopes, fill = role))+
geom_boxplot()+
theme(axis.text.x = element_text(size = 15), axis.title.y = element_text(size = 15),
legend.position = 'None', legend.text = element_text(size = 14))
ggplot(pgls_result[pgls_result$hsp_group %in% c('client_hsp90', 'client_both', 'control_hsp90', 'control_both'),],
aes(x = role, y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+
ylim(c(-0.2, 1))+
theme(axis.text.x = element_text(size = 15), axis.title.y = element_text(size = 15),
legend.position = 'None', legend.text = element_text(size = 14))
ggplot(pgls_result[pgls_result$hsp_group %in% c('client_hsp90', 'client_both', 'control_hsp90', 'control_both'),],
aes(x = role, y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+
ylim(c(-0.2, 1))+
theme(axis.text.x = element_text(size = 15), axis.title.y = element_text(size = 15),
legend.position = 'None', legend.text = element_text(size = 14))+
xlab('')
ggplot(pgls_result[pgls_result$hsp_group %in% c('client_hsp90', 'client_both', 'control_hsp90', 'control_both'),],
aes(x = role, y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+
ylim(c(-0.2, 1))+
theme(axis.text.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.position = 'None')+
xlab('')
ggplot(pgls_result[pgls_result$hsp_group %in% c('client_hsp90', 'client_both', 'control_hsp90', 'control_both'),],
aes(x = role, y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+
ylim(c(-0.2, 1))+
theme(axis.text.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.position = 'None', axis.text.y = element_text(size = 23))+
xlab('')
ggplot(pgls_result[pgls_result$hsp_group %in% c('client_hsp90', 'client_both', 'control_hsp90', 'control_both'),],
aes(x = role, y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+
ylim(c(-0.2, 1))+
theme(axis.text.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.position = 'None', axis.text.y = element_text(size = 23))+
xlab('')+
ylab('slope of lm(dN/dS ~ log10(Generation_length))')
ggplot(pgls_result[pgls_result$hsp_group %in% c('client_hsp90', 'client_both', 'control_hsp90', 'control_both'),],
aes(x = role, y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+
ylim(c(-0.2, 1))+
theme(axis.text.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.position = 'None', axis.text.y = element_text(size = 23))+
xlab('')+
ylab(paste('slope of', 'lm(dN/dS ~ log10(Generation_length))', sep = '\n'))
ggplot(pgls_result[pgls_result$hsp_group %in% c('client_hsp90', 'client_both', 'control_hsp90', 'control_both'),],
aes(x = role, y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+
ylim(c(-0.2, 1))+
theme(axis.text.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.position = 'None', axis.text.y = element_text(size = 23))+
xlab('')+
ylab(paste('slope of lm(dN/dS ~', 'log10(Generation_length))', sep = '\n'))
ggplot(pgls_result[pgls_result$hsp_group %in% c('client_hsp90', 'client_both', 'control_hsp90', 'control_both'),],
aes(x = role, y = slopes, fill = role))+
geom_boxplot(outlier.shape = NA)+
theme_bw()+
ylim(c(-0.2, 1))+
theme(axis.text.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.position = 'None', axis.text.y = element_text(size = 23))+
xlab('')+
ylab(paste('slope of lm(dN/dS ~', 'log10(Generation_length))', sep = '\n'))+
scale_x_discrete(name = "", labels = c('HSP90 clients', 'nonclients'))
setwd('../../../Molecular_evolution/Head/2Scripts/')
rm(list = ls(all = TRUE))
library(ggfortify)
library(dabestr)
set.seed(42)
metrics_table <- read.table('../../Body/2_Derived/gencode.v25.annotation.gtf.Genes.Shet.pLI.FIS.RVIS.GHIS.KnKs.GC.BrainSpecificRanking.Branch.gnomad.oe_lof_upper_bin.p', header = T)
genes_num_cols <- metrics_table[metrics_table$GeneType == 'protein_coding', c('EnsemblId', 'GeneLength', 'NumberOfTranscripts', 'AverageExonLength', 'AverageNumberOfExonsPerTranscript', 'SelCoeffHet',
'ProbOfBeingLofIntolerant', 'FunctionalIndispensabilityScore', 'ResidualVariationIntoleranceScore', 'GenomeWideHaploinsufficiencyScore',
'KnKsMouse', 'GcContent', 'Branch', 'oe_lof_upper_bin', 'p')]
summary(genes_num_cols)[7,]
genes_without_na <- na.omit(genes_num_cols) #11503
gene_ids <- genes_without_na$EnsemblId
genes_without_na <- genes_without_na[,-1]
genes_pca <- prcomp(genes_without_na, scale. = T)
plot(genes_pca)
PC1 <- predict(genes_pca)[,1]
PC2 <- predict(genes_pca)[,2]
PC1_var <- summary(genes_pca)$importance[2]
PC2_var <- summary(genes_pca)$importance[5]
genes_PC <- data.frame(gene_ids, PC1, PC2)
hsp90_int <- read.csv('../../Body/2_Derived/hsp90_clients.Elisa_more_0.2.WT_interaction_score.csv', header = T)
write.table(genes_PC, '../../Body/2_Derived/pca_with_new_metrics_hsp90_hsc70_clients.txt')
clients <- read.csv('../../Body/2_Derived/Chaperone-Protein_Interaction_hsp90_hsc70_clients.csv')
clients_PC <- merge(x = genes_PC, y = clients, by.x = 'gene_ids', by.y = 'clients')
clients_PC$chaperone <- ifelse((clients_PC$HSP90AB1 == 'True') & (clients_PC$HSPA8 == 'True'), 'both', NaN)
clients_PC[(clients_PC$HSP90AB1 == 'True') & (clients_PC$HSPA8 == 'False'), 'chaperone'] = 'HSP90AB1'
clients_PC[(clients_PC$HSP90AB1 == 'False') & (clients_PC$HSPA8 == 'True'), 'chaperone'] = 'HSPA8'
pdf('../../Body/4_Figures/pca_with_new_metrics_hsp90_hsc70_clients.pdf')
autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 3, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black')+
geom_point(data = clients_PC, aes(PC1, PC2, color = chaperone, alpha = 0.5),size = 2)+
ggtitle('Principal Component analisys with clients of hsp90 and hsc70')+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, size = 1, alpha = 0.5, color = 'hsp90'))+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, size = 1, alpha = 0.5, color = 'hsp70'))+
theme_bw()+
scale_color_manual(name  ="Genes",
breaks=c("both", "hsp70", 'hsp90', 'HSP90AB1', 'HSPA8'),
labels=c("HSP90 and HSC70 clients", "HSPA8 (HSC70)", 'HSP90AB1 (HSP90)', 'HSP90 clients', 'HSC70 clients'),
values = c('indianred2', 'goldenrod1', 'red3', 'deeppink4', 'purple'))+
guides(alpha = FALSE, size = FALSE)
#plotting density plots for pc1
genes_PC$client <- ifelse(!(genes_PC$gene_ids %in% clients_PC$gene_ids), 'No', 'Yes')
genes_PC[genes_PC$client == 'Yes',]$client <- ifelse((genes_PC[genes_PC$client == 'Yes',]$gene_ids %in% clients_PC[(clients_PC$HSP90AB1 == 'True') & (clients_PC$HSPA8 == 'False'),]$gene_ids), 'hsp90', 'Yes')
genes_PC[genes_PC$client == 'Yes',]$client <- ifelse((genes_PC[genes_PC$client == 'Yes',]$gene_ids %in% clients_PC[(clients_PC$HSP90AB1 == 'False') & (clients_PC$HSPA8 == 'True'),]$gene_ids), 'hsc70', 'Yes')
genes_PC[genes_PC$client == 'Yes',]$client <- ifelse((genes_PC[genes_PC$client == 'Yes',]$gene_ids %in% clients_PC[(clients_PC$HSP90AB1 == 'True') & (clients_PC$HSPA8 == 'True'),]$gene_ids), 'both', 'Yes')
par(mfcol = c(2,1))
g1 <- ggplot(genes_PC, aes(x=PC1, color=client)) +
geom_density()+
scale_color_manual(values=c('indianred2', 'deeppink4', 'purple', 'darkgray'))+
theme_bw()
ggsave(g1, file = '../../Body/4_Figures/density_pc1_clients.png', height = 2, width = 13)
g2 <- ggplot(genes_PC, aes(x=PC2, color=client)) +
geom_density()+
scale_color_manual(values=c('indianred2', 'deeppink4', 'purple', 'darkgray'))+
theme_bw()
ggsave(g2, file = '../../Body/4_Figures/density_pc2_clients.png', height = 2, width = 13)
dev.off()
ggplot(genes_PC, aes(x=PC1, color=client)) +
geom_density()+
scale_color_manual(values=c('indianred2', 'deeppink4', 'purple', 'darkgray'))+
theme_bw()
rm(list = ls(all = TRUE))
library(ggfortify)
library(dabestr)
library(ggrepel)
set.seed(42)
metrics_table <- read.table('../../Body/2_Derived/gencode.v25.annotation.gtf.Genes.Shet.pLI.FIS.RVIS.GHIS.KnKs.GC.BrainSpecificRanking.Branch.gnomad.oe_lof_upper_bin.p', header = T)
genes_num_cols <- metrics_table[metrics_table$GeneType == 'protein_coding', c('EnsemblId', 'GeneLength', 'NumberOfTranscripts', 'AverageExonLength', 'AverageNumberOfExonsPerTranscript', 'SelCoeffHet',
'ProbOfBeingLofIntolerant', 'FunctionalIndispensabilityScore', 'ResidualVariationIntoleranceScore', 'GenomeWideHaploinsufficiencyScore',
'KnKsMouse', 'GcContent', 'Branch', 'oe_lof_upper_bin', 'p')]
summary(genes_num_cols)[7,]
genes_without_na <- na.omit(genes_num_cols) #11503
colnames(genes_without_na) <- c('EnsemblId',"Длина гена" ,"Количество транскриптов", "Средняя длина экзона", "Среднее количество экзонов на транскрипт",
"SelCoeffHet", "pLI", "FunctionalIndispensabilityScore",
"ResidualVariationIntoleranceScore", "GHIS", "KnKsMouse",
"GC-контент","Ветвь", "oe_lof_upper_bin","p_GNOMAD")
gene_ids <- genes_without_na$EnsemblId
genes_without_na <- genes_without_na[,-1]
genes_pca <- prcomp(genes_without_na, scale. = T)
pca_sum <- summary(genes_pca)
barplot(pca_sum$importance['Proportion of Variance',1:10], col ="cyan3", ylab = "Доля объясненной дисперсии",
xlab = 'Главная компонента', cex.axis=1.2, cex.names=1.1, cex.lab = 1.2)
par(mfcol = c(1,1))
biplot(genes_pca, choises = 1:2)
PC1 <- predict(genes_pca)[,1]
PC2 <- predict(genes_pca)[,2]
PC1_var <- summary(genes_pca)$importance[2]
PC2_var <- summary(genes_pca)$importance[5]
genes_PC <- data.frame(gene_ids, PC1, PC2)
autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()
biplot(genes_pca, choises = 1:2)
autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()
warnings()
rm(list = ls(all = TRUE))
library(ggfortify)
library(dabestr)
library(ggrepel)
set.seed(42)
metrics_table <- read.table('../../Body/2_Derived/gencode.v25.annotation.gtf.Genes.Shet.pLI.FIS.RVIS.GHIS.KnKs.GC.BrainSpecificRanking.Branch.gnomad.oe_lof_upper_bin.p', header = T)
genes_num_cols <- metrics_table[metrics_table$GeneType == 'protein_coding', c('EnsemblId', 'GeneLength', 'NumberOfTranscripts', 'AverageExonLength', 'AverageNumberOfExonsPerTranscript', 'SelCoeffHet',
'ProbOfBeingLofIntolerant', 'FunctionalIndispensabilityScore', 'ResidualVariationIntoleranceScore', 'GenomeWideHaploinsufficiencyScore',
'KnKsMouse', 'GcContent', 'Branch', 'oe_lof_upper_bin', 'p')]
summary(genes_num_cols)[7,]
genes_without_na <- na.omit(genes_num_cols) #11503
gene_ids <- genes_without_na$EnsemblId
genes_without_na <- genes_without_na[,-1]
genes_pca <- prcomp(genes_without_na, scale. = T)
pca_sum <- summary(genes_pca)
PC1 <- predict(genes_pca)[,1]
PC2 <- predict(genes_pca)[,2]
PC1_var <- summary(genes_pca)$importance[2]
PC2_var <- summary(genes_pca)$importance[5]
genes_PC <- data.frame(gene_ids, PC1, PC2)
autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()
hsp90_int <- read.csv('../../Body/2_Derived/hsp90_clients.Elisa_more_0.2.WT_interaction_score.csv', header = T)
hsc70_int <- read.csv('../../Body/2_Derived/hsc70_clients.Elisa_more_0.2.WT_interaction_score.csv', header = T)
hsp90_int <- merge(hsp90_int, genes_PC, by.x = 'EnsemlID', by.y = 'gene_ids', all.x = T)
cor.test(hsp90_int$WT_interaction_score, hsp90_int$PC1, method = 'spearman', exact=FALSE) # rho=0.05791891, p-value = 0.1439
cor.test(hsp90_int$WT_interaction_score, hsp90_int$PC2, method = 'spearman', exact=FALSE) # rho=-0.1376778, p-value = 0.0004878
lm_hsp90 <- lm(hsp90_int$WT_interaction_score ~ hsp90_int$PC1 + hsp90_int$PC2)
summary(lm_hsp90)
hsc70_int <- merge(hsc70_int, genes_PC, by.x = 'EnsemlID', by.y = 'gene_ids', all.x = T)
cor.test(hsc70_int$WT_interaction_score, hsc70_int$PC1, method = 'spearman', exact=FALSE) # rho=0.04525303, p-value = 0.2609
cor.test(hsc70_int$WT_interaction_score, hsc70_int$PC2, method = 'spearman', exact=FALSE) # rho=-0.1114708, p-value = 0.005496
lm_hsc70 <- lm(hsc70_int$WT_interaction_score ~ hsc70_int$PC1 + hsc70_int$PC2)
summary(lm_hsc70)
both <- merge(hsp90_int, hsc70_int, by = 'EnsemlID')
both <- both[,c(1,2,5,6,7)]
colnames(both) <- c('id', 'WT_interaction_score_hsp90', 'WT_interaction_score_hsc70', 'PC1', 'PC2')
genes_PC <- merge(genes_PC, both[,c(1,2,3)], by.x = 'gene_ids', by.y = 'id', all.x = T)
hsps <- autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'hsp90'), shape = 19, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'hsc70'), shape = 19, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000141030',], aes(PC1, PC2, color = 'hsp90_control_gene'), shape = 17, size =3,  alpha = 0.8)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000090372',], aes(PC1, PC2, color = 'hsc70_control_gene'), shape = 17, size = 3,  alpha = 0.8)
hsps
both$hsp90_client <- NA
both$hsc70_client <- NA
both$hsp90_client <- both$WT_interaction_score_hsp90 > 1
both$hsc70_client <- both$WT_interaction_score_hsc70 > 1
both$common_client <- both$hsp90_client & both$hsc70_client
pca_clients_hsps <- autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'hsp90'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'hsc70'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = both[both$hsp90_client & !both$common_client,], aes(PC1, PC2, color = 'клиенты hsp90'),size = 2.5, alpha = 0.5, shape = 19)+
geom_point(data = both[both$hsc70_client & !both$common_client,], aes(PC1, PC2, color = 'клиенты hsc70'),size = 2.5, alpha = 0.5)+
geom_point(data= both[both$common_client,], aes(PC1, PC2, color = 'общие клиенты'), size = 2.5, alpha = 0.4)+
scale_color_manual(name  ="Гены",
breaks=c("hsc70", "hsp90", 'клиенты hsc70', 'клиенты hsp90', 'общие клиенты'),
labels=c("hsc70", "hsp90", 'клиенты hsc70', 'клиенты hsp90', 'общие клиенты'),
values = c('royalblue3', 'red3', 'steelblue2', 'deeppink', 'blueviolet'))+
guides(alpha = FALSE, size = FALSE)
print(pca_clients_hsps)
pca_clients_hsps <- autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'hsp90'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'hsc70'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = both[both$hsp90_client & !both$common_client,], aes(PC1, PC2, color = 'клиенты hsp90'),size = 2.5, alpha = 0.5, shape = 19)+
geom_point(data = both[both$hsc70_client & !both$common_client,], aes(PC1, PC2, color = 'клиенты hsc70'),size = 2.5, alpha = 0.5)+
geom_point(data= both[both$common_client,], aes(PC1, PC2, color = 'общие клиенты'), size = 2.5, alpha = 0.4)+
scale_color_manual(name  ="Гены",
breaks=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
labels=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
values = c('royalblue3', 'red3', 'steelblue2', 'deeppink', 'blueviolet'))+
guides(alpha = FALSE, size = FALSE)
print(pca_clients_hsps)
View(genes_PC)
pca_clients_hsps <- autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'HSP90'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'HSC70'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = both[both$hsp90_client & !both$common_client,], aes(PC1, PC2, color = 'HSP90 clients'),size = 2.5, alpha = 0.5, shape = 19)+
geom_point(data = both[both$hsc70_client & !both$common_client,], aes(PC1, PC2, color = 'HSC70 clients'),size = 2.5, alpha = 0.5)+
geom_point(data= both[both$common_client,], aes(PC1, PC2, color = 'Common clients'), size = 2.5, alpha = 0.4)+
scale_color_manual(name  ="Genes",
breaks=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
labels=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
values = c('royalblue3', 'red3', 'steelblue2', 'deeppink', 'blueviolet'))+
guides(alpha = FALSE, size = FALSE)
View(both)
print(pca_clients_hsps)
autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'hsp90'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'hsc70'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = both[both$hsp90_client & !both$common_client,], aes(PC1, PC2, color = 'клиенты hsp90'),size = 2.5, alpha = 0.5, shape = 19)+
geom_point(data = both[both$hsc70_client & !both$common_client,], aes(PC1, PC2, color = 'клиенты hsc70'),size = 2.5, alpha = 0.5)+
geom_point(data= both[both$common_client,], aes(PC1, PC2, color = 'общие клиенты'), size = 2.5, alpha = 0.4)+
scale_color_manual(name  ="Гены",
breaks=c("hsc70", "hsp90", 'клиенты hsc70', 'клиенты hsp90', 'общие клиенты'),
labels=c("hsc70", "hsp90", 'клиенты hsc70', 'клиенты hsp90', 'общие клиенты'),
values = c('royalblue3', 'red3', 'steelblue2', 'deeppink', 'blueviolet'))+
guides(alpha = FALSE, size = FALSE)
print(pca_clients_hsps)
pca_clients_hsps <- autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'HSP90'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'HSC70'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = both[both$hsp90_client & !both$common_client,], aes(PC1, PC2, color = 'HSP90 clients'),size = 2.5, alpha = 0.5, shape = 19)+
geom_point(data = both[both$hsc70_client & !both$common_client,], aes(PC1, PC2, color = 'HSC70 clients'),size = 2.5, alpha = 0.5)+
geom_point(data= both[both$common_client,], aes(PC1, PC2, color = 'Common clients'), size = 2.5, alpha = 0.4)+
scale_color_manual(name  ="Genes",
breaks=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
labels=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
values = c('royalblue3', 'red3', 'steelblue2', 'deeppink', 'blueviolet'))+
guides(alpha = FALSE, size = FALSE)+
theme(axis.title.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.title = element_text(size = 27), legend.text = element_text(size = 27),
axis.text = element_text(size = 25))
print(pca_clients_hsps)
pca_clients_hsps <- autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'HSP90'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'HSC70'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = both[both$hsp90_client & !both$common_client,], aes(PC1, PC2, color = 'HSP90 clients'),size = 2.5, alpha = 0.5, shape = 19)+
geom_point(data = both[both$hsc70_client & !both$common_client,], aes(PC1, PC2, color = 'HSC70 clients'),size = 2.5, alpha = 0.5)+
geom_point(data= both[both$common_client,], aes(PC1, PC2, color = 'Common clients'), size = 2.5, alpha = 0.4)+
scale_color_manual(name  ="Genes",
breaks=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
labels=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
values = c('royalblue3', 'red3', 'steelblue2', 'deeppink', 'blueviolet'))+
guides(alpha = FALSE, size = FALSE)+
theme(text = element_text(size = 20), axis.title.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.title = element_text(size = 27), legend.text = element_text(size = 27),
axis.text = element_text(size = 25))
print(pca_clients_hsps)
pca_clients_hsps <- autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'HSP90'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'HSC70'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = both[both$hsp90_client & !both$common_client,], aes(PC1, PC2, color = 'HSP90 clients'),size = 2.5, alpha = 0.5, shape = 19)+
geom_point(data = both[both$hsc70_client & !both$common_client,], aes(PC1, PC2, color = 'HSC70 clients'),size = 2.5, alpha = 0.5)+
geom_point(data= both[both$common_client,], aes(PC1, PC2, color = 'Common clients'), size = 2.5, alpha = 0.4)+
scale_color_manual(name  ="Genes",
breaks=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
labels=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
values = c('royalblue3', 'red3', 'steelblue2', 'deeppink', 'blueviolet'))+
guides(alpha = FALSE, size = FALSE)+
theme(axis.title.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.title = element_text(size = 27), legend.text = element_text(size = 27),
axis.text = element_text(size = 25), line = element_line(size = 10))
print(pca_clients_hsps)
pca_clients_hsps <- autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 4, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'HSP90'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'HSC70'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = both[both$hsp90_client & !both$common_client,], aes(PC1, PC2, color = 'HSP90 clients'),size = 2.5, alpha = 0.5, shape = 19)+
geom_point(data = both[both$hsc70_client & !both$common_client,], aes(PC1, PC2, color = 'HSC70 clients'),size = 2.5, alpha = 0.5)+
geom_point(data= both[both$common_client,], aes(PC1, PC2, color = 'Common clients'), size = 2.5, alpha = 0.4)+
scale_color_manual(name  ="Genes",
breaks=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
labels=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
values = c('royalblue3', 'red3', 'steelblue2', 'deeppink', 'blueviolet'))+
guides(alpha = FALSE, size = FALSE)+
theme(axis.title.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.title = element_text(size = 27), legend.text = element_text(size = 27),
axis.text = element_text(size = 25))
pca_clients_hsps <- autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 10, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'HSP90'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'HSC70'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = both[both$hsp90_client & !both$common_client,], aes(PC1, PC2, color = 'HSP90 clients'),size = 2.5, alpha = 0.5, shape = 19)+
geom_point(data = both[both$hsc70_client & !both$common_client,], aes(PC1, PC2, color = 'HSC70 clients'),size = 2.5, alpha = 0.5)+
geom_point(data= both[both$common_client,], aes(PC1, PC2, color = 'Common clients'), size = 2.5, alpha = 0.4)+
scale_color_manual(name  ="Genes",
breaks=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
labels=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
values = c('royalblue3', 'red3', 'steelblue2', 'deeppink', 'blueviolet'))+
guides(alpha = FALSE, size = FALSE)+
theme(axis.title.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.title = element_text(size = 27), legend.text = element_text(size = 27),
axis.text = element_text(size = 25))
print(pca_clients_hsps)
pca_clients_hsps <- autoplot(genes_pca, data = genes_without_na, colour = 'gray', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 6, scale = 0,
loadings.colour = 'black', loadings.label.colour = 'black', loadings.label.repel=T)+
theme_bw()+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000096384',], aes(PC1, PC2, color = 'HSP90'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = genes_PC[genes_PC$gene_ids == 'ENSG00000109971',], aes(PC1, PC2, color = 'HSC70'), shape = 17, size = 4,  alpha = 0.6)+
geom_point(data = both[both$hsp90_client & !both$common_client,], aes(PC1, PC2, color = 'HSP90 clients'),size = 2.5, alpha = 0.5, shape = 19)+
geom_point(data = both[both$hsc70_client & !both$common_client,], aes(PC1, PC2, color = 'HSC70 clients'),size = 2.5, alpha = 0.5)+
geom_point(data= both[both$common_client,], aes(PC1, PC2, color = 'Common clients'), size = 2.5, alpha = 0.4)+
scale_color_manual(name  ="Genes",
breaks=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
labels=c("HSC70", "HSP90", 'HSC70 clients', 'HSP90 clients', 'Common clients'),
values = c('royalblue3', 'red3', 'steelblue2', 'deeppink', 'blueviolet'))+
guides(alpha = FALSE, size = FALSE)+
theme(axis.title.x = element_text(size = 29), axis.title.y = element_text(size = 29),
legend.title = element_text(size = 27), legend.text = element_text(size = 27),
axis.text = element_text(size = 25))
print(pca_clients_hsps)
